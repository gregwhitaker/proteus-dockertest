buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.4.4'
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '2.0.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.5.RELEASE'
}

mainClassName = 'com.netifi.proteus.dockertest.client.Main'

dependencyManagement {
    imports {
        mavenBom "io.spring.platform:platform-bom:${springbomVersion}"
    }
}

dependencies {
    compile project(':dockertest-idl')
    compile "com.netifi.proteus:proteus-spring-boot-starter:${proteusSpringVersion}"

    testCompile 'junit:junit:4.12'
}

configurations.all {
    resolutionStrategy {
        dependencySubstitution {
            substitute module('com.google.guava:guava') with module('com.google.guava:guava:22.0')
        }
    }
}

apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin

import com.bmuschko.gradle.docker.tasks.image.*

docker {
    registryCredentials {
        url = 'https://hub.docker.com/r/gregnetifi/proteus-dockertest-service'
        username = "$dockerUsername"
        password = "$dockerPassword"
    }
}

task buildImage(type: DockerBuildImage, dependsOn: build) {
    buildArgs = ['JAR_FILE': "${bootJar.archiveName}"]
    dockerFile = file("${projectDir}/Dockerfile")
    inputDir = file("${projectDir}")
    tags = ["gregnetifi/proteus-${projectDir.name}"]
}

task pushImage(type: DockerPushImage, dependsOn: buildImage) {
    imageName = "gregnetifi/proteus-${projectDir.name}"
}